name: CI for SARIMAX + FastAPI

on:
  push:
    branches:
      - prod
  pull_request:
    branches:
      - prod

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: energy_db
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      PG_DBNAME: energy_db
      PG_USER: admin
      PG_PASSWORD: admin123
      PG_HOST: localhost
      PG_PORT: 5432

      INFLUX_URL: ${{ secrets.INFLUX_URL }}
      INFLUX_TOKEN: ${{ secrets.INFLUX_TOKEN }}
      INFLUX_ORG: ${{ secrets.INFLUX_ORG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest httpx redis paho-mqtt

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 && break
            echo "Waiting for PostgreSQL..."
            sleep 3
          done

      - name: Create predictions table
        run: |
          sudo apt-get install -y postgresql-client
          PGPASSWORD=admin123 psql -h localhost -U admin -d energy_db -c "
            CREATE TABLE IF NOT EXISTS predictions (
              timestamp TIMESTAMP,
              temperature DOUBLE PRECISION,
              humidity DOUBLE PRECISION,
              energyproduced DOUBLE PRECISION
            );
          "

      - name: Run unit tests
        run: pytest tests/test_main.py
